(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
(0.000) CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None
ALTER TABLE "django_content_type" RENAME TO "django_content_type__old"; (params [])
(0.000) ALTER TABLE "django_content_type" RENAME TO "django_content_type__old"; args=[]
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None
INSERT INTO "django_content_type" ("model", "app_label", "id", "name") SELECT "model", "app_label", "id", "name" FROM "django_content_type__old"; (params [])
(0.000) INSERT INTO "django_content_type" ("model", "app_label", "id", "name") SELECT "model", "app_label", "id", "name" FROM "django_content_type__old"; args=[]
DROP TABLE "django_content_type__old"; (params [])
(0.000) DROP TABLE "django_content_type__old"; args=[]
CREATE UNIQUE INDEX "django_content_type_app_label_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params [])
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2016-06-04 13:29:13.532772'); args=['contenttypes', u'0001_initial', u'2016-06-04 13:29:13.532772']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL); args=None
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); args=None
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id")); (params None)
(0.000) CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id")); args=None
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); (params None)
(0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); args=None
CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "group_id" integer NOT NULL REFERENCES "auth_group" ("id")); (params None)
(0.000) CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "group_id" integer NOT NULL REFERENCES "auth_group" ("id")); args=None
CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id")); (params None)
(0.000) CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id")); args=None
CREATE UNIQUE INDEX "auth_permission_content_type_id_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params [])
(0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=[]
CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id"); (params [])
(0.000) CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id"); args=[]
CREATE UNIQUE INDEX "auth_group_permissions_group_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params [])
(0.000) CREATE UNIQUE INDEX "auth_group_permissions_group_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); args=[]
CREATE INDEX "auth_group_permissions_0e939a4f" ON "auth_group_permissions" ("group_id"); (params [])
(0.000) CREATE INDEX "auth_group_permissions_0e939a4f" ON "auth_group_permissions" ("group_id"); args=[]
CREATE INDEX "auth_group_permissions_8373b171" ON "auth_group_permissions" ("permission_id"); (params [])
(0.000) CREATE INDEX "auth_group_permissions_8373b171" ON "auth_group_permissions" ("permission_id"); args=[]
CREATE UNIQUE INDEX "auth_user_groups_user_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); (params [])
(0.000) CREATE UNIQUE INDEX "auth_user_groups_user_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); args=[]
CREATE INDEX "auth_user_groups_e8701ad4" ON "auth_user_groups" ("user_id"); (params [])
(0.000) CREATE INDEX "auth_user_groups_e8701ad4" ON "auth_user_groups" ("user_id"); args=[]
CREATE INDEX "auth_user_groups_0e939a4f" ON "auth_user_groups" ("group_id"); (params [])
(0.000) CREATE INDEX "auth_user_groups_0e939a4f" ON "auth_user_groups" ("group_id"); args=[]
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); (params [])
(0.000) CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); args=[]
CREATE INDEX "auth_user_user_permissions_e8701ad4" ON "auth_user_user_permissions" ("user_id"); (params [])
(0.000) CREATE INDEX "auth_user_user_permissions_e8701ad4" ON "auth_user_user_permissions" ("user_id"); args=[]
CREATE INDEX "auth_user_user_permissions_8373b171" ON "auth_user_user_permissions" ("permission_id"); (params [])
(0.000) CREATE INDEX "auth_user_user_permissions_8373b171" ON "auth_user_user_permissions" ("permission_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2016-06-04 13:29:13.773654'); args=['auth', u'0001_initial', u'2016-06-04 13:29:13.773654']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "account_emailaddress" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "email" varchar(75) NOT NULL UNIQUE, "verified" bool NOT NULL, "primary" bool NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "account_emailaddress" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "email" varchar(75) NOT NULL UNIQUE, "verified" bool NOT NULL, "primary" bool NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); args=None
CREATE TABLE "account_emailconfirmation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created" datetime NOT NULL, "sent" datetime NULL, "key" varchar(64) NOT NULL UNIQUE, "email_address_id" integer NOT NULL REFERENCES "account_emailaddress" ("id")); (params None)
(0.000) CREATE TABLE "account_emailconfirmation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created" datetime NOT NULL, "sent" datetime NULL, "key" varchar(64) NOT NULL UNIQUE, "email_address_id" integer NOT NULL REFERENCES "account_emailaddress" ("id")); args=None
CREATE INDEX "account_emailaddress_e8701ad4" ON "account_emailaddress" ("user_id"); (params [])
(0.000) CREATE INDEX "account_emailaddress_e8701ad4" ON "account_emailaddress" ("user_id"); args=[]
CREATE INDEX "account_emailconfirmation_6f1edeac" ON "account_emailconfirmation" ("email_address_id"); (params [])
(0.000) CREATE INDEX "account_emailconfirmation_6f1edeac" ON "account_emailconfirmation" ("email_address_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('account', '0001_initial', '2016-06-04 13:29:13.941185'); args=['account', u'0001_initial', u'2016-06-04 13:29:13.941185']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "account_emailaddress" RENAME TO "account_emailaddress__old"; (params [])
(0.000) ALTER TABLE "account_emailaddress" RENAME TO "account_emailaddress__old"; args=[]
CREATE TABLE "account_emailaddress" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "verified" bool NOT NULL, "primary" bool NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "email" varchar(254) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "account_emailaddress" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "verified" bool NOT NULL, "primary" bool NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "email" varchar(254) NOT NULL UNIQUE); args=None
INSERT INTO "account_emailaddress" ("user_id", "verified", "id", "primary", "email") SELECT "user_id", "verified", "id", "primary", "email" FROM "account_emailaddress__old"; (params [])
(0.000) INSERT INTO "account_emailaddress" ("user_id", "verified", "id", "primary", "email") SELECT "user_id", "verified", "id", "primary", "email" FROM "account_emailaddress__old"; args=[]
DROP TABLE "account_emailaddress__old"; (params [])
(0.000) DROP TABLE "account_emailaddress__old"; args=[]
CREATE INDEX "account_emailaddress_e8701ad4" ON "account_emailaddress" ("user_id"); (params [])
(0.000) CREATE INDEX "account_emailaddress_e8701ad4" ON "account_emailaddress" ("user_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('account', '0002_email_max_length', '2016-06-04 13:29:14.107270'); args=['account', u'0002_email_max_length', u'2016-06-04 13:29:14.107270']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); args=None
CREATE INDEX "django_admin_log_417f1b1c" ON "django_admin_log" ("content_type_id"); (params [])
(0.000) CREATE INDEX "django_admin_log_417f1b1c" ON "django_admin_log" ("content_type_id"); args=[]
CREATE INDEX "django_admin_log_e8701ad4" ON "django_admin_log" ("user_id"); (params [])
(0.000) CREATE INDEX "django_admin_log_e8701ad4" ON "django_admin_log" ("user_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2016-06-04 13:29:14.266656'); args=['admin', u'0001_initial', u'2016-06-04 13:29:14.266656']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "django_admin_log" RENAME TO "django_admin_log__old"; (params [])
(0.000) ALTER TABLE "django_admin_log" RENAME TO "django_admin_log__old"; args=[]
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "action_time" datetime NOT NULL); (params None)
(0.000) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "action_time" datetime NOT NULL); args=None
INSERT INTO "django_admin_log" ("action_flag", "action_time", "user_id", "content_type_id", "object_repr", "object_id", "change_message", "id") SELECT "action_flag", "action_time", "user_id", "content_type_id", "object_repr", "object_id", "change_message", "id" FROM "django_admin_log__old"; (params [])
(0.000) INSERT INTO "django_admin_log" ("action_flag", "action_time", "user_id", "content_type_id", "object_repr", "object_id", "change_message", "id") SELECT "action_flag", "action_time", "user_id", "content_type_id", "object_repr", "object_id", "change_message", "id" FROM "django_admin_log__old"; args=[]
DROP TABLE "django_admin_log__old"; (params [])
(0.000) DROP TABLE "django_admin_log__old"; args=[]
CREATE INDEX "django_admin_log_417f1b1c" ON "django_admin_log" ("content_type_id"); (params [])
(0.000) CREATE INDEX "django_admin_log_417f1b1c" ON "django_admin_log" ("content_type_id"); args=[]
CREATE INDEX "django_admin_log_e8701ad4" ON "django_admin_log" ("user_id"); (params [])
(0.000) CREATE INDEX "django_admin_log_e8701ad4" ON "django_admin_log" ("user_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2016-06-04 13:29:14.441151'); args=['admin', u'0002_logentry_remove_auto_add', u'2016-06-04 13:29:14.441151']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "django_content_type" RENAME TO "django_content_type__old"; (params [])
(0.000) ALTER TABLE "django_content_type" RENAME TO "django_content_type__old"; args=[]
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
(0.000) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); args=None
INSERT INTO "django_content_type" ("model", "app_label", "id", "name") SELECT "model", "app_label", "id", "name" FROM "django_content_type__old"; (params [])
(0.000) INSERT INTO "django_content_type" ("model", "app_label", "id", "name") SELECT "model", "app_label", "id", "name" FROM "django_content_type__old"; args=[]
DROP TABLE "django_content_type__old"; (params [])
(0.000) DROP TABLE "django_content_type__old"; args=[]
CREATE UNIQUE INDEX "django_content_type_app_label_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params [])
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=[]
ALTER TABLE "django_content_type" RENAME TO "django_content_type__old"; (params [])
(0.000) ALTER TABLE "django_content_type" RENAME TO "django_content_type__old"; args=[]
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None
INSERT INTO "django_content_type" ("model", "app_label", "id") SELECT "model", "app_label", "id" FROM "django_content_type__old"; (params [])
(0.000) INSERT INTO "django_content_type" ("model", "app_label", "id") SELECT "model", "app_label", "id" FROM "django_content_type__old"; args=[]
DROP TABLE "django_content_type__old"; (params [])
(0.000) DROP TABLE "django_content_type__old"; args=[]
CREATE UNIQUE INDEX "django_content_type_app_label_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params [])
(0.000) CREATE UNIQUE INDEX "django_content_type_app_label_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2016-06-04 13:29:14.623737'); args=['contenttypes', u'0002_remove_content_type_name', u'2016-06-04 13:29:14.623737']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "annotations_annotation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NOT NULL, "body" text NOT NULL, "paragraph" integer unsigned NOT NULL, "privacy" smallint unsigned NOT NULL, "privacy_override" bool NOT NULL, "date_created" datetime NOT NULL, "date_modified" datetime NOT NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id")); (params None)
(0.000) CREATE TABLE "annotations_annotation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NOT NULL, "body" text NOT NULL, "paragraph" integer unsigned NOT NULL, "privacy" smallint unsigned NOT NULL, "privacy_override" bool NOT NULL, "date_created" datetime NOT NULL, "date_modified" datetime NOT NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id")); args=None
CREATE TABLE "annotations_annotationsharemap" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "notified_flag" bool NOT NULL, "annotation_id" integer NOT NULL REFERENCES "annotations_annotation" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "annotations_annotationsharemap" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "notified_flag" bool NOT NULL, "annotation_id" integer NOT NULL REFERENCES "annotations_annotation" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); args=None
ALTER TABLE "annotations_annotation" RENAME TO "annotations_annotation__old"; (params [])
(0.000) ALTER TABLE "annotations_annotation" RENAME TO "annotations_annotation__old"; args=[]
CREATE TABLE "annotations_annotation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NOT NULL, "body" text NOT NULL, "paragraph" integer unsigned NOT NULL, "privacy" smallint unsigned NOT NULL, "privacy_override" bool NOT NULL, "date_created" datetime NOT NULL, "date_modified" datetime NOT NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id")); (params None)
(0.000) CREATE TABLE "annotations_annotation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NOT NULL, "body" text NOT NULL, "paragraph" integer unsigned NOT NULL, "privacy" smallint unsigned NOT NULL, "privacy_override" bool NOT NULL, "date_created" datetime NOT NULL, "date_modified" datetime NOT NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id")); args=None
INSERT INTO "annotations_annotation" ("body", "content_type_id", "privacy", "date_modified", "object_id", "paragraph", "privacy_override", "date_created", "author_id", "id") SELECT "body", "content_type_id", "privacy", "date_modified", "object_id", "paragraph", "privacy_override", "date_created", "author_id", "id" FROM "annotations_annotation__old"; (params [])
(0.000) INSERT INTO "annotations_annotation" ("body", "content_type_id", "privacy", "date_modified", "object_id", "paragraph", "privacy_override", "date_created", "author_id", "id") SELECT "body", "content_type_id", "privacy", "date_modified", "object_id", "paragraph", "privacy_override", "date_created", "author_id", "id" FROM "annotations_annotation__old"; args=[]
DROP TABLE "annotations_annotation__old"; (params [])
(0.000) DROP TABLE "annotations_annotation__old"; args=[]
CREATE INDEX "annotations_annotation_4f331e2f" ON "annotations_annotation" ("author_id"); (params [])
(0.000) CREATE INDEX "annotations_annotation_4f331e2f" ON "annotations_annotation" ("author_id"); args=[]
CREATE INDEX "annotations_annotation_417f1b1c" ON "annotations_annotation" ("content_type_id"); (params [])
(0.000) CREATE INDEX "annotations_annotation_417f1b1c" ON "annotations_annotation" ("content_type_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('annotations', '0001_initial', '2016-06-04 13:29:14.816207'); args=['annotations', u'0001_initial', u'2016-06-04 13:29:14.816207']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "auth_permission" RENAME TO "auth_permission__old"; (params [])
(0.000) ALTER TABLE "auth_permission" RENAME TO "auth_permission__old"; args=[]
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
(0.000) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); args=None
INSERT INTO "auth_permission" ("content_type_id", "codename", "id", "name") SELECT "content_type_id", "codename", "id", "name" FROM "auth_permission__old"; (params [])
(0.000) INSERT INTO "auth_permission" ("content_type_id", "codename", "id", "name") SELECT "content_type_id", "codename", "id", "name" FROM "auth_permission__old"; args=[]
DROP TABLE "auth_permission__old"; (params [])
(0.000) DROP TABLE "auth_permission__old"; args=[]
CREATE UNIQUE INDEX "auth_permission_content_type_id_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params [])
(0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=[]
CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id"); (params [])
(0.000) CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2016-06-04 13:29:14.982340'); args=['auth', u'0002_alter_permission_name_max_length', u'2016-06-04 13:29:14.982340']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "auth_user" RENAME TO "auth_user__old"; (params [])
(0.000) ALTER TABLE "auth_user" RENAME TO "auth_user__old"; args=[]
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); (params None)
(0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); args=None
INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; (params [])
(0.000) INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; args=[]
DROP TABLE "auth_user__old"; (params [])
(0.000) DROP TABLE "auth_user__old"; args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2016-06-04 13:29:15.148424'); args=['auth', u'0003_alter_user_email_max_length', u'2016-06-04 13:29:15.148424']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "auth_user" RENAME TO "auth_user__old"; (params [])
(0.001) ALTER TABLE "auth_user" RENAME TO "auth_user__old"; args=[]
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(30) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(30) NOT NULL UNIQUE); args=None
INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; (params [])
(0.000) INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; args=[]
DROP TABLE "auth_user__old"; (params [])
(0.000) DROP TABLE "auth_user__old"; args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2016-06-04 13:29:15.314377'); args=['auth', u'0004_alter_user_username_opts', u'2016-06-04 13:29:15.314377']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "auth_user" RENAME TO "auth_user__old"; (params [])
(0.001) ALTER TABLE "auth_user" RENAME TO "auth_user__old"; args=[]
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); (params None)
(0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); args=None
INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; (params [])
(0.000) INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; args=[]
DROP TABLE "auth_user__old"; (params [])
(0.000) DROP TABLE "auth_user__old"; args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2016-06-04 13:29:15.480509'); args=['auth', u'0005_alter_user_last_login_null', u'2016-06-04 13:29:15.480509']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2016-06-04 13:29:15.555970'); args=['auth', u'0006_require_contenttypes_0002', u'2016-06-04 13:29:15.555970']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "auth_user" RENAME TO "auth_user__old"; (params [])
(0.000) ALTER TABLE "auth_user" RENAME TO "auth_user__old"; args=[]
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(30) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(30) NOT NULL UNIQUE); args=None
INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; (params [])
(0.000) INSERT INTO "auth_user" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user__old"; args=[]
DROP TABLE "auth_user__old"; (params [])
(0.000) DROP TABLE "auth_user__old"; args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2016-06-04 13:29:15.748580'); args=['auth', u'0007_alter_validators_add_error_messages', u'2016-06-04 13:29:15.748580']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "taggit_tag" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE, "slug" varchar(100) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "taggit_tag" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE, "slug" varchar(100) NOT NULL UNIQUE); args=None
CREATE TABLE "taggit_taggeditem" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" integer NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "tag_id" integer NOT NULL REFERENCES "taggit_tag" ("id")); (params None)
(0.000) CREATE TABLE "taggit_taggeditem" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" integer NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "tag_id" integer NOT NULL REFERENCES "taggit_tag" ("id")); args=None
CREATE INDEX "taggit_taggeditem_af31437c" ON "taggit_taggeditem" ("object_id"); (params [])
(0.000) CREATE INDEX "taggit_taggeditem_af31437c" ON "taggit_taggeditem" ("object_id"); args=[]
CREATE INDEX "taggit_taggeditem_417f1b1c" ON "taggit_taggeditem" ("content_type_id"); (params [])
(0.000) CREATE INDEX "taggit_taggeditem_417f1b1c" ON "taggit_taggeditem" ("content_type_id"); args=[]
CREATE INDEX "taggit_taggeditem_76f094bc" ON "taggit_taggeditem" ("tag_id"); (params [])
(0.000) CREATE INDEX "taggit_taggeditem_76f094bc" ON "taggit_taggeditem" ("tag_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('taggit', '0001_initial', '2016-06-04 13:29:15.914097'); args=['taggit', u'0001_initial', u'2016-06-04 13:29:15.914097']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "taggit_taggeditem" RENAME TO "taggit_taggeditem__old"; (params [])
(0.000) ALTER TABLE "taggit_taggeditem" RENAME TO "taggit_taggeditem__old"; args=[]
CREATE TABLE "taggit_taggeditem" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" integer NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "tag_id" integer NOT NULL REFERENCES "taggit_tag" ("id")); (params None)
(0.000) CREATE TABLE "taggit_taggeditem" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" integer NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "tag_id" integer NOT NULL REFERENCES "taggit_tag" ("id")); args=None
INSERT INTO "taggit_taggeditem" ("tag_id", "id", "object_id", "content_type_id") SELECT "tag_id", "id", "object_id", "content_type_id" FROM "taggit_taggeditem__old"; (params [])
(0.000) INSERT INTO "taggit_taggeditem" ("tag_id", "id", "object_id", "content_type_id") SELECT "tag_id", "id", "object_id", "content_type_id" FROM "taggit_taggeditem__old"; args=[]
DROP TABLE "taggit_taggeditem__old"; (params [])
(0.000) DROP TABLE "taggit_taggeditem__old"; args=[]
CREATE INDEX "taggit_taggeditem_af31437c" ON "taggit_taggeditem" ("object_id"); (params [])
(0.000) CREATE INDEX "taggit_taggeditem_af31437c" ON "taggit_taggeditem" ("object_id"); args=[]
CREATE INDEX "taggit_taggeditem_417f1b1c" ON "taggit_taggeditem" ("content_type_id"); (params [])
(0.000) CREATE INDEX "taggit_taggeditem_417f1b1c" ON "taggit_taggeditem" ("content_type_id"); args=[]
CREATE INDEX "taggit_taggeditem_76f094bc" ON "taggit_taggeditem" ("tag_id"); (params [])
(0.000) CREATE INDEX "taggit_taggeditem_76f094bc" ON "taggit_taggeditem" ("tag_id"); args=[]
CREATE INDEX "taggit_taggeditem_content_type_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id"); (params [])
(0.000) CREATE INDEX "taggit_taggeditem_content_type_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('taggit', '0002_auto_20150616_2121', '2016-06-04 13:29:16.079699'); args=['taggit', u'0002_auto_20150616_2121', u'2016-06-04 13:29:16.079699']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id")); args=None
CREATE TABLE "blogging_blogcontenttype" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type" varchar(100) NOT NULL UNIQUE, "is_leaf" bool NOT NULL); (params None)
(0.000) CREATE TABLE "blogging_blogcontenttype" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type" varchar(100) NOT NULL UNIQUE, "is_leaf" bool NOT NULL); args=None
CREATE TABLE "blogging_blogparent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(50) NOT NULL UNIQUE, "data" text NOT NULL, "slug" varchar(50) NOT NULL, "lft" integer unsigned NOT NULL, "rght" integer unsigned NOT NULL, "tree_id" integer unsigned NOT NULL, "level" integer unsigned NOT NULL, "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id"), "parent_id" integer NULL REFERENCES "blogging_blogparent" ("id")); (params None)
(0.000) CREATE TABLE "blogging_blogparent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(50) NOT NULL UNIQUE, "data" text NOT NULL, "slug" varchar(50) NOT NULL, "lft" integer unsigned NOT NULL, "rght" integer unsigned NOT NULL, "tree_id" integer unsigned NOT NULL, "level" integer unsigned NOT NULL, "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id"), "parent_id" integer NULL REFERENCES "blogging_blogparent" ("id")); args=None
ALTER TABLE "blogging_blogcontent" RENAME TO "blogging_blogcontent__old"; (params [])
(0.000) ALTER TABLE "blogging_blogcontent" RENAME TO "blogging_blogcontent__old"; args=[]
CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id")); (params None)
(0.000) CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id")); args=None
INSERT INTO "blogging_blogcontent" ("create_date", "published_flag", "publication_start", "title", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id") SELECT "create_date", "published_flag", "publication_start", "title", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", NULL FROM "blogging_blogcontent__old"; (params [])
(0.000) INSERT INTO "blogging_blogcontent" ("create_date", "published_flag", "publication_start", "title", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id") SELECT "create_date", "published_flag", "publication_start", "title", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", NULL FROM "blogging_blogcontent__old"; args=[]
DROP TABLE "blogging_blogcontent__old"; (params [])
(0.000) DROP TABLE "blogging_blogcontent__old"; args=[]
CREATE INDEX "blogging_blogparent_2dbcba41" ON "blogging_blogparent" ("slug"); (params [])
(0.000) CREATE INDEX "blogging_blogparent_2dbcba41" ON "blogging_blogparent" ("slug"); args=[]
CREATE INDEX "blogging_blogparent_caf7cc51" ON "blogging_blogparent" ("lft"); (params [])
(0.000) CREATE INDEX "blogging_blogparent_caf7cc51" ON "blogging_blogparent" ("lft"); args=[]
CREATE INDEX "blogging_blogparent_3cfbd988" ON "blogging_blogparent" ("rght"); (params [])
(0.000) CREATE INDEX "blogging_blogparent_3cfbd988" ON "blogging_blogparent" ("rght"); args=[]
CREATE INDEX "blogging_blogparent_656442a0" ON "blogging_blogparent" ("tree_id"); (params [])
(0.000) CREATE INDEX "blogging_blogparent_656442a0" ON "blogging_blogparent" ("tree_id"); args=[]
CREATE INDEX "blogging_blogparent_c9e9a848" ON "blogging_blogparent" ("level"); (params [])
(0.000) CREATE INDEX "blogging_blogparent_c9e9a848" ON "blogging_blogparent" ("level"); args=[]
CREATE INDEX "blogging_blogparent_417f1b1c" ON "blogging_blogparent" ("content_type_id"); (params [])
(0.000) CREATE INDEX "blogging_blogparent_417f1b1c" ON "blogging_blogparent" ("content_type_id"); args=[]
CREATE INDEX "blogging_blogparent_6be37982" ON "blogging_blogparent" ("parent_id"); (params [])
(0.000) CREATE INDEX "blogging_blogparent_6be37982" ON "blogging_blogparent" ("parent_id"); args=[]
CREATE INDEX "blogging_blogcontent_2dbcba41" ON "blogging_blogcontent" ("slug"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_2dbcba41" ON "blogging_blogcontent" ("slug"); args=[]
CREATE INDEX "blogging_blogcontent_e616221e" ON "blogging_blogcontent" ("author_id_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_e616221e" ON "blogging_blogcontent" ("author_id_id"); args=[]
CREATE INDEX "blogging_blogcontent_417f1b1c" ON "blogging_blogcontent" ("content_type_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_417f1b1c" ON "blogging_blogcontent" ("content_type_id"); args=[]
ALTER TABLE "blogging_blogcontent" RENAME TO "blogging_blogcontent__old"; (params [])
(0.000) ALTER TABLE "blogging_blogcontent" RENAME TO "blogging_blogcontent__old"; args=[]
CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id"), "section_id" integer NOT NULL REFERENCES "blogging_blogparent" ("id")); (params None)
(0.000) CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id"), "section_id" integer NOT NULL REFERENCES "blogging_blogparent" ("id")); args=None
INSERT INTO "blogging_blogcontent" ("create_date", "published_flag", "publication_start", "title", "section_id", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id") SELECT "create_date", "published_flag", "publication_start", "title", NULL, "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id" FROM "blogging_blogcontent__old"; (params [])
(0.000) INSERT INTO "blogging_blogcontent" ("create_date", "published_flag", "publication_start", "title", "section_id", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id") SELECT "create_date", "published_flag", "publication_start", "title", NULL, "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id" FROM "blogging_blogcontent__old"; args=[]
DROP TABLE "blogging_blogcontent__old"; (params [])
(0.000) DROP TABLE "blogging_blogcontent__old"; args=[]
CREATE INDEX "blogging_blogcontent_2dbcba41" ON "blogging_blogcontent" ("slug"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_2dbcba41" ON "blogging_blogcontent" ("slug"); args=[]
CREATE INDEX "blogging_blogcontent_e616221e" ON "blogging_blogcontent" ("author_id_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_e616221e" ON "blogging_blogcontent" ("author_id_id"); args=[]
CREATE INDEX "blogging_blogcontent_417f1b1c" ON "blogging_blogcontent" ("content_type_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_417f1b1c" ON "blogging_blogcontent" ("content_type_id"); args=[]
CREATE INDEX "blogging_blogcontent_730f6511" ON "blogging_blogcontent" ("section_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_730f6511" ON "blogging_blogcontent" ("section_id"); args=[]
ALTER TABLE "blogging_blogcontent" RENAME TO "blogging_blogcontent__old"; (params [])
(0.000) ALTER TABLE "blogging_blogcontent" RENAME TO "blogging_blogcontent__old"; args=[]
CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id"), "section_id" integer NOT NULL REFERENCES "blogging_blogparent" ("id")); (params None)
(0.000) CREATE TABLE "blogging_blogcontent" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "data" text NOT NULL, "create_date" datetime NOT NULL, "last_modified" datetime NOT NULL, "published_flag" bool NOT NULL, "publication_start" datetime NULL, "special_flag" bool NOT NULL, "url_path" varchar(255) NOT NULL, "slug" varchar(100) NOT NULL, "author_id_id" integer NOT NULL REFERENCES "auth_user" ("id"), "content_type_id" integer NULL REFERENCES "blogging_blogcontenttype" ("id"), "section_id" integer NOT NULL REFERENCES "blogging_blogparent" ("id")); args=None
INSERT INTO "blogging_blogcontent" ("create_date", "published_flag", "publication_start", "title", "section_id", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id") SELECT "create_date", "published_flag", "publication_start", "title", "section_id", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id" FROM "blogging_blogcontent__old"; (params [])
(0.000) INSERT INTO "blogging_blogcontent" ("create_date", "published_flag", "publication_start", "title", "section_id", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id") SELECT "create_date", "published_flag", "publication_start", "title", "section_id", "slug", "last_modified", "author_id_id", "url_path", "data", "id", "special_flag", "content_type_id" FROM "blogging_blogcontent__old"; args=[]
DROP TABLE "blogging_blogcontent__old"; (params [])
(0.000) DROP TABLE "blogging_blogcontent__old"; args=[]
CREATE INDEX "blogging_blogcontent_2dbcba41" ON "blogging_blogcontent" ("slug"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_2dbcba41" ON "blogging_blogcontent" ("slug"); args=[]
CREATE INDEX "blogging_blogcontent_e616221e" ON "blogging_blogcontent" ("author_id_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_e616221e" ON "blogging_blogcontent" ("author_id_id"); args=[]
CREATE INDEX "blogging_blogcontent_417f1b1c" ON "blogging_blogcontent" ("content_type_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_417f1b1c" ON "blogging_blogcontent" ("content_type_id"); args=[]
CREATE INDEX "blogging_blogcontent_730f6511" ON "blogging_blogcontent" ("section_id"); (params [])
(0.000) CREATE INDEX "blogging_blogcontent_730f6511" ON "blogging_blogcontent" ("section_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('blogging', '0001_initial', '2016-06-04 13:29:16.313196'); args=['blogging', u'0001_initial', u'2016-06-04 13:29:16.313196']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "user_profile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "address" text NULL, "occupation" integer NOT NULL, "website" varchar(100) NULL, "date_of_birth" date NULL, "gender" varchar(20) NOT NULL, "signin_date" datetime NOT NULL, "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "user_profile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "address" text NULL, "occupation" integer NOT NULL, "website" varchar(100) NULL, "date_of_birth" date NULL, "gender" varchar(20) NOT NULL, "signin_date" datetime NOT NULL, "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id")); args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('dashboard', '0001_initial', '2016-06-04 13:29:16.485760'); args=['dashboard', u'0001_initial', u'2016-06-04 13:29:16.485760']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "django_site" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "domain" varchar(100) NOT NULL, "name" varchar(50) NOT NULL); (params None)
(0.000) CREATE TABLE "django_site" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "domain" varchar(100) NOT NULL, "name" varchar(50) NOT NULL); args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sites', '0001_initial', '2016-06-04 13:29:16.659688'); args=['sites', u'0001_initial', u'2016-06-04 13:29:16.659688']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "django_redirect" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "site_id" integer NOT NULL REFERENCES "django_site" ("id"), "old_path" varchar(200) NOT NULL, "new_path" varchar(200) NOT NULL); (params None)
(0.000) CREATE TABLE "django_redirect" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "site_id" integer NOT NULL REFERENCES "django_site" ("id"), "old_path" varchar(200) NOT NULL, "new_path" varchar(200) NOT NULL); args=None
CREATE UNIQUE INDEX "django_redirect_site_id_ac5dd16b_uniq" ON "django_redirect" ("site_id", "old_path"); (params [])
(0.000) CREATE UNIQUE INDEX "django_redirect_site_id_ac5dd16b_uniq" ON "django_redirect" ("site_id", "old_path"); args=[]
CREATE INDEX "django_redirect_9365d6e7" ON "django_redirect" ("site_id"); (params [])
(0.000) CREATE INDEX "django_redirect_9365d6e7" ON "django_redirect" ("site_id"); args=[]
CREATE INDEX "django_redirect_91a0b591" ON "django_redirect" ("old_path"); (params [])
(0.000) CREATE INDEX "django_redirect_91a0b591" ON "django_redirect" ("old_path"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('redirects', '0001_initial', '2016-06-04 13:29:16.841937'); args=['redirects', u'0001_initial', u'2016-06-04 13:29:16.841937']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "reversion_revision" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "manager_slug" varchar(200) NOT NULL, "date_created" datetime NOT NULL, "comment" text NOT NULL, "user_id" integer NULL REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "reversion_revision" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "manager_slug" varchar(200) NOT NULL, "date_created" datetime NOT NULL, "comment" text NOT NULL, "user_id" integer NULL REFERENCES "auth_user" ("id")); args=None
CREATE TABLE "reversion_version" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NOT NULL, "object_id_int" integer NULL, "format" varchar(255) NOT NULL, "serialized_data" text NOT NULL, "object_repr" text NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "revision_id" integer NOT NULL REFERENCES "reversion_revision" ("id")); (params None)
(0.000) CREATE TABLE "reversion_version" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NOT NULL, "object_id_int" integer NULL, "format" varchar(255) NOT NULL, "serialized_data" text NOT NULL, "object_repr" text NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "revision_id" integer NOT NULL REFERENCES "reversion_revision" ("id")); args=None
CREATE INDEX "reversion_revision_b16b0f06" ON "reversion_revision" ("manager_slug"); (params [])
(0.000) CREATE INDEX "reversion_revision_b16b0f06" ON "reversion_revision" ("manager_slug"); args=[]
CREATE INDEX "reversion_revision_c69e55a4" ON "reversion_revision" ("date_created"); (params [])
(0.000) CREATE INDEX "reversion_revision_c69e55a4" ON "reversion_revision" ("date_created"); args=[]
CREATE INDEX "reversion_revision_e8701ad4" ON "reversion_revision" ("user_id"); (params [])
(0.000) CREATE INDEX "reversion_revision_e8701ad4" ON "reversion_revision" ("user_id"); args=[]
CREATE INDEX "reversion_version_0c9ba3a3" ON "reversion_version" ("object_id_int"); (params [])
(0.000) CREATE INDEX "reversion_version_0c9ba3a3" ON "reversion_version" ("object_id_int"); args=[]
CREATE INDEX "reversion_version_417f1b1c" ON "reversion_version" ("content_type_id"); (params [])
(0.000) CREATE INDEX "reversion_version_417f1b1c" ON "reversion_version" ("content_type_id"); args=[]
CREATE INDEX "reversion_version_5de09a8d" ON "reversion_version" ("revision_id"); (params [])
(0.000) CREATE INDEX "reversion_version_5de09a8d" ON "reversion_version" ("revision_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('reversion', '0001_initial', '2016-06-04 13:29:17.032533'); args=['reversion', u'0001_initial', u'2016-06-04 13:29:17.032533']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "reversion_revision" RENAME TO "reversion_revision__old"; (params [])
(0.000) ALTER TABLE "reversion_revision" RENAME TO "reversion_revision__old"; args=[]
CREATE TABLE "reversion_revision" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "date_created" datetime NOT NULL, "comment" text NOT NULL, "user_id" integer NULL REFERENCES "auth_user" ("id"), "manager_slug" varchar(191) NOT NULL); (params None)
(0.000) CREATE TABLE "reversion_revision" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "date_created" datetime NOT NULL, "comment" text NOT NULL, "user_id" integer NULL REFERENCES "auth_user" ("id"), "manager_slug" varchar(191) NOT NULL); args=None
INSERT INTO "reversion_revision" ("comment", "date_created", "user_id", "id", "manager_slug") SELECT "comment", "date_created", "user_id", "id", "manager_slug" FROM "reversion_revision__old"; (params [])
(0.000) INSERT INTO "reversion_revision" ("comment", "date_created", "user_id", "id", "manager_slug") SELECT "comment", "date_created", "user_id", "id", "manager_slug" FROM "reversion_revision__old"; args=[]
DROP TABLE "reversion_revision__old"; (params [])
(0.000) DROP TABLE "reversion_revision__old"; args=[]
CREATE INDEX "reversion_revision_c69e55a4" ON "reversion_revision" ("date_created"); (params [])
(0.000) CREATE INDEX "reversion_revision_c69e55a4" ON "reversion_revision" ("date_created"); args=[]
CREATE INDEX "reversion_revision_e8701ad4" ON "reversion_revision" ("user_id"); (params [])
(0.000) CREATE INDEX "reversion_revision_e8701ad4" ON "reversion_revision" ("user_id"); args=[]
CREATE INDEX "reversion_revision_b16b0f06" ON "reversion_revision" ("manager_slug"); (params [])
(0.000) CREATE INDEX "reversion_revision_b16b0f06" ON "reversion_revision" ("manager_slug"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('reversion', '0002_auto_20141216_1509', '2016-06-04 13:29:17.206356'); args=['reversion', u'0002_auto_20141216_1509', u'2016-06-04 13:29:17.206356']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
(0.000) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); args=None
CREATE INDEX "django_session_de54fa62" ON "django_session" ("expire_date"); (params [])
(0.000) CREATE INDEX "django_session_de54fa62" ON "django_session" ("expire_date"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2016-06-04 13:29:17.380278'); args=['sessions', u'0001_initial', u'2016-06-04 13:29:17.380278']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "django_site" RENAME TO "django_site__old"; (params [])
(0.000) ALTER TABLE "django_site" RENAME TO "django_site__old"; args=[]
CREATE TABLE "django_site" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "domain" varchar(100) NOT NULL UNIQUE); (params None)
(0.000) CREATE TABLE "django_site" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "domain" varchar(100) NOT NULL UNIQUE); args=None
INSERT INTO "django_site" ("domain", "id", "name") SELECT "domain", "id", "name" FROM "django_site__old"; (params [])
(0.000) INSERT INTO "django_site" ("domain", "id", "name") SELECT "domain", "id", "name" FROM "django_site__old"; args=[]
DROP TABLE "django_site__old"; (params [])
(0.000) DROP TABLE "django_site__old"; args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sites', '0002_alter_domain_unique', '2016-06-04 13:29:17.564303'); args=['sites', u'0002_alter_domain_unique', u'2016-06-04 13:29:17.564303']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "uid" varchar(255) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "extra_data" text NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "uid" varchar(255) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "extra_data" text NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); args=None
CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "client_id" varchar(100) NOT NULL, "secret" varchar(100) NOT NULL, "key" varchar(100) NOT NULL); (params None)
(0.000) CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "client_id" varchar(100) NOT NULL, "secret" varchar(100) NOT NULL, "key" varchar(100) NOT NULL); args=None
CREATE TABLE "socialaccount_socialapp_sites" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "socialapp_id" integer NOT NULL REFERENCES "socialaccount_socialapp" ("id"), "site_id" integer NOT NULL REFERENCES "django_site" ("id")); (params None)
(0.000) CREATE TABLE "socialaccount_socialapp_sites" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "socialapp_id" integer NOT NULL REFERENCES "socialaccount_socialapp" ("id"), "site_id" integer NOT NULL REFERENCES "django_site" ("id")); args=None
CREATE TABLE "socialaccount_socialtoken" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "token" text NOT NULL, "token_secret" text NOT NULL, "expires_at" datetime NULL, "account_id" integer NOT NULL REFERENCES "socialaccount_socialaccount" ("id"), "app_id" integer NOT NULL REFERENCES "socialaccount_socialapp" ("id")); (params None)
(0.000) CREATE TABLE "socialaccount_socialtoken" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "token" text NOT NULL, "token_secret" text NOT NULL, "expires_at" datetime NULL, "account_id" integer NOT NULL REFERENCES "socialaccount_socialaccount" ("id"), "app_id" integer NOT NULL REFERENCES "socialaccount_socialapp" ("id")); args=None
ALTER TABLE "socialaccount_socialtoken" RENAME TO "socialaccount_socialtoken__old"; (params [])
(0.000) ALTER TABLE "socialaccount_socialtoken" RENAME TO "socialaccount_socialtoken__old"; args=[]
CREATE TABLE "socialaccount_socialtoken" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "token" text NOT NULL, "token_secret" text NOT NULL, "expires_at" datetime NULL, "account_id" integer NOT NULL REFERENCES "socialaccount_socialaccount" ("id"), "app_id" integer NOT NULL REFERENCES "socialaccount_socialapp" ("id")); (params None)
(0.000) CREATE TABLE "socialaccount_socialtoken" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "token" text NOT NULL, "token_secret" text NOT NULL, "expires_at" datetime NULL, "account_id" integer NOT NULL REFERENCES "socialaccount_socialaccount" ("id"), "app_id" integer NOT NULL REFERENCES "socialaccount_socialapp" ("id")); args=None
INSERT INTO "socialaccount_socialtoken" ("account_id", "app_id", "expires_at", "token", "id", "token_secret") SELECT "account_id", "app_id", "expires_at", "token", "id", "token_secret" FROM "socialaccount_socialtoken__old"; (params [])
(0.000) INSERT INTO "socialaccount_socialtoken" ("account_id", "app_id", "expires_at", "token", "id", "token_secret") SELECT "account_id", "app_id", "expires_at", "token", "id", "token_secret" FROM "socialaccount_socialtoken__old"; args=[]
DROP TABLE "socialaccount_socialtoken__old"; (params [])
(0.000) DROP TABLE "socialaccount_socialtoken__old"; args=[]
CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); args=[]
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id"); (params [])
(0.000) CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id"); args=[]
CREATE INDEX "socialaccount_socialapp_sites_fe95b0a0" ON "socialaccount_socialapp_sites" ("socialapp_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialapp_sites_fe95b0a0" ON "socialaccount_socialapp_sites" ("socialapp_id"); args=[]
CREATE INDEX "socialaccount_socialapp_sites_9365d6e7" ON "socialaccount_socialapp_sites" ("site_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialapp_sites_9365d6e7" ON "socialaccount_socialapp_sites" ("site_id"); args=[]
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id"); (params [])
(0.000) CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id"); args=[]
CREATE INDEX "socialaccount_socialtoken_8a089c2a" ON "socialaccount_socialtoken" ("account_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialtoken_8a089c2a" ON "socialaccount_socialtoken" ("account_id"); args=[]
CREATE INDEX "socialaccount_socialtoken_f382adfe" ON "socialaccount_socialtoken" ("app_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialtoken_f382adfe" ON "socialaccount_socialtoken" ("app_id"); args=[]
ALTER TABLE "socialaccount_socialaccount" RENAME TO "socialaccount_socialaccount__old"; (params [])
(0.000) ALTER TABLE "socialaccount_socialaccount" RENAME TO "socialaccount_socialaccount__old"; args=[]
CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "uid" varchar(255) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "extra_data" text NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); (params None)
(0.000) CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "uid" varchar(255) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "extra_data" text NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); args=None
INSERT INTO "socialaccount_socialaccount" ("user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined") SELECT "user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined" FROM "socialaccount_socialaccount__old"; (params [])
(0.000) INSERT INTO "socialaccount_socialaccount" ("user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined") SELECT "user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined" FROM "socialaccount_socialaccount__old"; args=[]
DROP TABLE "socialaccount_socialaccount__old"; (params [])
(0.000) DROP TABLE "socialaccount_socialaccount__old"; args=[]
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid"); (params [])
(0.000) CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid"); args=[]
CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('socialaccount', '0001_initial', '2016-06-04 13:29:17.826209'); args=['socialaccount', u'0001_initial', u'2016-06-04 13:29:17.826209']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "socialaccount_socialaccount" RENAME TO "socialaccount_socialaccount__old"; (params [])
(0.000) ALTER TABLE "socialaccount_socialaccount" RENAME TO "socialaccount_socialaccount__old"; args=[]
CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "extra_data" text NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "uid" varchar(191) NOT NULL); (params None)
(0.000) CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "extra_data" text NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "uid" varchar(191) NOT NULL); args=None
INSERT INTO "socialaccount_socialaccount" ("user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined") SELECT "user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined" FROM "socialaccount_socialaccount__old"; (params [])
(0.000) INSERT INTO "socialaccount_socialaccount" ("user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined") SELECT "user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined" FROM "socialaccount_socialaccount__old"; args=[]
DROP TABLE "socialaccount_socialaccount__old"; (params [])
(0.000) DROP TABLE "socialaccount_socialaccount__old"; args=[]
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid"); (params [])
(0.000) CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid"); args=[]
CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); args=[]
ALTER TABLE "socialaccount_socialapp" RENAME TO "socialaccount_socialapp__old"; (params [])
(0.000) ALTER TABLE "socialaccount_socialapp" RENAME TO "socialaccount_socialapp__old"; args=[]
CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "secret" varchar(100) NOT NULL, "key" varchar(100) NOT NULL, "client_id" varchar(191) NOT NULL); (params None)
(0.000) CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "secret" varchar(100) NOT NULL, "key" varchar(100) NOT NULL, "client_id" varchar(191) NOT NULL); args=None
INSERT INTO "socialaccount_socialapp" ("client_id", "secret", "key", "provider", "id", "name") SELECT "client_id", "secret", "key", "provider", "id", "name" FROM "socialaccount_socialapp__old"; (params [])
(0.000) INSERT INTO "socialaccount_socialapp" ("client_id", "secret", "key", "provider", "id", "name") SELECT "client_id", "secret", "key", "provider", "id", "name" FROM "socialaccount_socialapp__old"; args=[]
DROP TABLE "socialaccount_socialapp__old"; (params [])
(0.000) DROP TABLE "socialaccount_socialapp__old"; args=[]
ALTER TABLE "socialaccount_socialapp" RENAME TO "socialaccount_socialapp__old"; (params [])
(0.000) ALTER TABLE "socialaccount_socialapp" RENAME TO "socialaccount_socialapp__old"; args=[]
CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "client_id" varchar(191) NOT NULL, "secret" varchar(100) NOT NULL, "key" varchar(191) NOT NULL); (params None)
(0.000) CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "client_id" varchar(191) NOT NULL, "secret" varchar(100) NOT NULL, "key" varchar(191) NOT NULL); args=None
INSERT INTO "socialaccount_socialapp" ("client_id", "secret", "key", "provider", "id", "name") SELECT "client_id", "secret", "key", "provider", "id", "name" FROM "socialaccount_socialapp__old"; (params [])
(0.000) INSERT INTO "socialaccount_socialapp" ("client_id", "secret", "key", "provider", "id", "name") SELECT "client_id", "secret", "key", "provider", "id", "name" FROM "socialaccount_socialapp__old"; args=[]
DROP TABLE "socialaccount_socialapp__old"; (params [])
(0.000) DROP TABLE "socialaccount_socialapp__old"; args=[]
ALTER TABLE "socialaccount_socialapp" RENAME TO "socialaccount_socialapp__old"; (params [])
(0.000) ALTER TABLE "socialaccount_socialapp" RENAME TO "socialaccount_socialapp__old"; args=[]
CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "client_id" varchar(191) NOT NULL, "key" varchar(191) NOT NULL, "secret" varchar(191) NOT NULL); (params None)
(0.000) CREATE TABLE "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "client_id" varchar(191) NOT NULL, "key" varchar(191) NOT NULL, "secret" varchar(191) NOT NULL); args=None
INSERT INTO "socialaccount_socialapp" ("client_id", "secret", "key", "provider", "id", "name") SELECT "client_id", "secret", "key", "provider", "id", "name" FROM "socialaccount_socialapp__old"; (params [])
(0.000) INSERT INTO "socialaccount_socialapp" ("client_id", "secret", "key", "provider", "id", "name") SELECT "client_id", "secret", "key", "provider", "id", "name" FROM "socialaccount_socialapp__old"; args=[]
DROP TABLE "socialaccount_socialapp__old"; (params [])
(0.000) DROP TABLE "socialaccount_socialapp__old"; args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('socialaccount', '0002_token_max_lengths', '2016-06-04 13:29:18.125046'); args=['socialaccount', u'0002_token_max_lengths', u'2016-06-04 13:29:18.125046']
(0.000) PRAGMA foreign_keys; args=None
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) BEGIN; args=None
ALTER TABLE "socialaccount_socialaccount" RENAME TO "socialaccount_socialaccount__old"; (params [])
(0.000) ALTER TABLE "socialaccount_socialaccount" RENAME TO "socialaccount_socialaccount__old"; args=[]
CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "uid" varchar(191) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "extra_data" text NOT NULL); (params None)
(0.000) CREATE TABLE "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "uid" varchar(191) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "extra_data" text NOT NULL); args=None
INSERT INTO "socialaccount_socialaccount" ("user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined") SELECT "user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined" FROM "socialaccount_socialaccount__old"; (params [])
(0.000) INSERT INTO "socialaccount_socialaccount" ("user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined") SELECT "user_id", "uid", "last_login", "provider", "extra_data", "id", "date_joined" FROM "socialaccount_socialaccount__old"; args=[]
DROP TABLE "socialaccount_socialaccount__old"; (params [])
(0.000) DROP TABLE "socialaccount_socialaccount__old"; args=[]
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid"); (params [])
(0.000) CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid"); args=[]
CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); (params [])
(0.000) CREATE INDEX "socialaccount_socialaccount_e8701ad4" ON "socialaccount_socialaccount" ("user_id"); args=[]
(0.000) PRAGMA foreign_keys = 0; args=None
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('socialaccount', '0003_extra_data_default_dict', '2016-06-04 13:29:18.299283'); args=['socialaccount', u'0003_extra_data_default_dict', u'2016-06-04 13:29:18.299283']
(0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None
(0.000) SELECT "django_migrations"."app", "django_migrations"."name" FROM "django_migrations"; args=()
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry' AND "django_content_type"."app_label" = 'admin'); args=('logentry', 'admin')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry' AND "django_content_type"."app_label" = 'admin'); args=('logentry', 'admin')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry'); args=['admin', 'logentry']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add log entry', 1, 'add_logentry' UNION ALL SELECT 'Can change log entry', 1, 'change_logentry' UNION ALL SELECT 'Can delete log entry', 1, 'delete_logentry'; args=(u'Can add log entry', 1, u'add_logentry', u'Can change log entry', 1, u'change_logentry', u'Can delete log entry', 1, u'delete_logentry')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission' AND "django_content_type"."app_label" = 'auth'); args=('permission', 'auth')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission' AND "django_content_type"."app_label" = 'auth'); args=('permission', 'auth')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'); args=['auth', 'permission']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group' AND "django_content_type"."app_label" = 'auth'); args=('group', 'auth')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group' AND "django_content_type"."app_label" = 'auth'); args=('group', 'auth')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'group'); args=['auth', 'group']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user' AND "django_content_type"."app_label" = 'auth'); args=('user', 'auth')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user' AND "django_content_type"."app_label" = 'auth'); args=('user', 'auth')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'user'); args=['auth', 'user']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add permission', 2, 'add_permission' UNION ALL SELECT 'Can change permission', 2, 'change_permission' UNION ALL SELECT 'Can delete permission', 2, 'delete_permission' UNION ALL SELECT 'Can add group', 3, 'add_group' UNION ALL SELECT 'Can change group', 3, 'change_group' UNION ALL SELECT 'Can delete group', 3, 'delete_group' UNION ALL SELECT 'Can add user', 4, 'add_user' UNION ALL SELECT 'Can change user', 4, 'change_user' UNION ALL SELECT 'Can delete user', 4, 'delete_user'; args=(u'Can add permission', 2, u'add_permission', u'Can change permission', 2, u'change_permission', u'Can delete permission', 2, u'delete_permission', u'Can add group', 3, u'add_group', u'Can change group', 3, u'change_group', u'Can delete group', 3, u'delete_group', u'Can add user', 4, u'add_user', u'Can change user', 4, u'change_user', u'Can delete user', 4, u'delete_user')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype' AND "django_content_type"."app_label" = 'contenttypes'); args=('contenttype', 'contenttypes')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype' AND "django_content_type"."app_label" = 'contenttypes'); args=('contenttype', 'contenttypes')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype'); args=['contenttypes', 'contenttype']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add content type', 5, 'add_contenttype' UNION ALL SELECT 'Can change content type', 5, 'change_contenttype' UNION ALL SELECT 'Can delete content type', 5, 'delete_contenttype'; args=(u'Can add content type', 5, u'add_contenttype', u'Can change content type', 5, u'change_contenttype', u'Can delete content type', 5, u'delete_contenttype')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session' AND "django_content_type"."app_label" = 'sessions'); args=('session', 'sessions')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session' AND "django_content_type"."app_label" = 'sessions'); args=('session', 'sessions')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session'); args=['sessions', 'session']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add session', 6, 'add_session' UNION ALL SELECT 'Can change session', 6, 'change_session' UNION ALL SELECT 'Can delete session', 6, 'delete_session'; args=(u'Can add session', 6, u'add_session', u'Can change session', 6, u'change_session', u'Can delete session', 6, u'delete_session')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site' AND "django_content_type"."app_label" = 'sites'); args=('site', 'sites')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site' AND "django_content_type"."app_label" = 'sites'); args=('site', 'sites')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sites', 'site'); args=['sites', 'site']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add site', 7, 'add_site' UNION ALL SELECT 'Can change site', 7, 'change_site' UNION ALL SELECT 'Can delete site', 7, 'delete_site'; args=(u'Can add site', 7, u'add_site', u'Can change site', 7, u'change_site', u'Can delete site', 7, u'delete_site')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'; args=('sites',)
(0.000) SELECT (1) AS "a" FROM "django_site" LIMIT 1; args=()
(0.000) SELECT "django_site"."id", "django_site"."domain", "django_site"."name" FROM "django_site" WHERE "django_site"."id" = 1; args=(1,)
(0.000) BEGIN; args=None
(0.000) UPDATE "django_site" SET "domain" = 'example.com', "name" = 'example.com' WHERE "django_site"."id" = 1; args=('example.com', 'example.com', 1)
(0.000) INSERT INTO "django_site" ("id", "domain", "name") SELECT 1, 'example.com', 'example.com'; args=(1, 'example.com', 'example.com')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'blogcontenttype' AND "django_content_type"."app_label" = 'blogging'); args=('blogcontenttype', 'blogging')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'blogcontenttype' AND "django_content_type"."app_label" = 'blogging'); args=('blogcontenttype', 'blogging')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('blogging', 'blogcontenttype'); args=['blogging', 'blogcontenttype']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'blogparent' AND "django_content_type"."app_label" = 'blogging'); args=('blogparent', 'blogging')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'blogparent' AND "django_content_type"."app_label" = 'blogging'); args=('blogparent', 'blogging')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('blogging', 'blogparent'); args=['blogging', 'blogparent']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'blogcontent' AND "django_content_type"."app_label" = 'blogging'); args=('blogcontent', 'blogging')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'blogcontent' AND "django_content_type"."app_label" = 'blogging'); args=('blogcontent', 'blogging')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('blogging', 'blogcontent'); args=['blogging', 'blogcontent']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add blog content type', 8, 'add_blogcontenttype' UNION ALL SELECT 'Can change blog content type', 8, 'change_blogcontenttype' UNION ALL SELECT 'Can delete blog content type', 8, 'delete_blogcontenttype' UNION ALL SELECT 'Can add blog parent', 9, 'add_blogparent' UNION ALL SELECT 'Can change blog parent', 9, 'change_blogparent' UNION ALL SELECT 'Can delete blog parent', 9, 'delete_blogparent' UNION ALL SELECT 'Can add blog content', 10, 'add_blogcontent' UNION ALL SELECT 'Can change blog content', 10, 'change_blogcontent' UNION ALL SELECT 'Can delete blog content', 10, 'delete_blogcontent'; args=(u'Can add blog content type', 8, u'add_blogcontenttype', u'Can change blog content type', 8, u'change_blogcontenttype', u'Can delete blog content type', 8, u'delete_blogcontenttype', u'Can add blog parent', 9, u'add_blogparent', u'Can change blog parent', 9, u'change_blogparent', u'Can delete blog parent', 9, u'delete_blogparent', u'Can add blog content', 10, u'add_blogcontent', u'Can change blog content', 10, u'change_blogcontent', u'Can delete blog content', 10, u'delete_blogcontent')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'blogging'; args=('blogging',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'annotation' AND "django_content_type"."app_label" = 'annotations'); args=('annotation', 'annotations')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'annotation' AND "django_content_type"."app_label" = 'annotations'); args=('annotation', 'annotations')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('annotations', 'annotation'); args=['annotations', 'annotation']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'annotationsharemap' AND "django_content_type"."app_label" = 'annotations'); args=('annotationsharemap', 'annotations')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'annotationsharemap' AND "django_content_type"."app_label" = 'annotations'); args=('annotationsharemap', 'annotations')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('annotations', 'annotationsharemap'); args=['annotations', 'annotationsharemap']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(11, 12)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add annotation', 11, 'add_annotation' UNION ALL SELECT 'Can change annotation', 11, 'change_annotation' UNION ALL SELECT 'Can delete annotation', 11, 'delete_annotation' UNION ALL SELECT 'Can add annotation share map', 12, 'add_annotationsharemap' UNION ALL SELECT 'Can change annotation share map', 12, 'change_annotationsharemap' UNION ALL SELECT 'Can delete annotation share map', 12, 'delete_annotationsharemap'; args=(u'Can add annotation', 11, u'add_annotation', u'Can change annotation', 11, u'change_annotation', u'Can delete annotation', 11, u'delete_annotation', u'Can add annotation share map', 12, u'add_annotationsharemap', u'Can change annotation share map', 12, u'change_annotationsharemap', u'Can delete annotation share map', 12, u'delete_annotationsharemap')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'annotations'; args=('annotations',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userprofile' AND "django_content_type"."app_label" = 'dashboard'); args=('userprofile', 'dashboard')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userprofile' AND "django_content_type"."app_label" = 'dashboard'); args=('userprofile', 'dashboard')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('dashboard', 'userprofile'); args=['dashboard', 'userprofile']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (13) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(13,)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add user profile', 13, 'add_userprofile' UNION ALL SELECT 'Can change user profile', 13, 'change_userprofile' UNION ALL SELECT 'Can delete user profile', 13, 'delete_userprofile'; args=(u'Can add user profile', 13, u'add_userprofile', u'Can change user profile', 13, u'change_userprofile', u'Can delete user profile', 13, u'delete_userprofile')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'dashboard'; args=('dashboard',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'redirect' AND "django_content_type"."app_label" = 'redirects'); args=('redirect', 'redirects')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'redirect' AND "django_content_type"."app_label" = 'redirects'); args=('redirect', 'redirects')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('redirects', 'redirect'); args=['redirects', 'redirect']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (14) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(14,)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add redirect', 14, 'add_redirect' UNION ALL SELECT 'Can change redirect', 14, 'change_redirect' UNION ALL SELECT 'Can delete redirect', 14, 'delete_redirect'; args=(u'Can add redirect', 14, u'add_redirect', u'Can change redirect', 14, u'change_redirect', u'Can delete redirect', 14, u'delete_redirect')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'redirects'; args=('redirects',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'emailaddress' AND "django_content_type"."app_label" = 'account'); args=('emailaddress', 'account')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'emailaddress' AND "django_content_type"."app_label" = 'account'); args=('emailaddress', 'account')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('account', 'emailaddress'); args=['account', 'emailaddress']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'emailconfirmation' AND "django_content_type"."app_label" = 'account'); args=('emailconfirmation', 'account')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'emailconfirmation' AND "django_content_type"."app_label" = 'account'); args=('emailconfirmation', 'account')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('account', 'emailconfirmation'); args=['account', 'emailconfirmation']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (16, 15) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(16, 15)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add email address', 15, 'add_emailaddress' UNION ALL SELECT 'Can change email address', 15, 'change_emailaddress' UNION ALL SELECT 'Can delete email address', 15, 'delete_emailaddress' UNION ALL SELECT 'Can add email confirmation', 16, 'add_emailconfirmation' UNION ALL SELECT 'Can change email confirmation', 16, 'change_emailconfirmation' UNION ALL SELECT 'Can delete email confirmation', 16, 'delete_emailconfirmation'; args=(u'Can add email address', 15, u'add_emailaddress', u'Can change email address', 15, u'change_emailaddress', u'Can delete email address', 15, u'delete_emailaddress', u'Can add email confirmation', 16, u'add_emailconfirmation', u'Can change email confirmation', 16, u'change_emailconfirmation', u'Can delete email confirmation', 16, u'delete_emailconfirmation')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'account'; args=('account',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'socialapp' AND "django_content_type"."app_label" = 'socialaccount'); args=('socialapp', 'socialaccount')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'socialapp' AND "django_content_type"."app_label" = 'socialaccount'); args=('socialapp', 'socialaccount')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('socialaccount', 'socialapp'); args=['socialaccount', 'socialapp']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'socialaccount' AND "django_content_type"."app_label" = 'socialaccount'); args=('socialaccount', 'socialaccount')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'socialaccount' AND "django_content_type"."app_label" = 'socialaccount'); args=('socialaccount', 'socialaccount')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('socialaccount', 'socialaccount'); args=['socialaccount', 'socialaccount']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'socialtoken' AND "django_content_type"."app_label" = 'socialaccount'); args=('socialtoken', 'socialaccount')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'socialtoken' AND "django_content_type"."app_label" = 'socialaccount'); args=('socialtoken', 'socialaccount')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('socialaccount', 'socialtoken'); args=['socialaccount', 'socialtoken']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (17, 18, 19) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(17, 18, 19)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add social application', 17, 'add_socialapp' UNION ALL SELECT 'Can change social application', 17, 'change_socialapp' UNION ALL SELECT 'Can delete social application', 17, 'delete_socialapp' UNION ALL SELECT 'Can add social account', 18, 'add_socialaccount' UNION ALL SELECT 'Can change social account', 18, 'change_socialaccount' UNION ALL SELECT 'Can delete social account', 18, 'delete_socialaccount' UNION ALL SELECT 'Can add social application token', 19, 'add_socialtoken' UNION ALL SELECT 'Can change social application token', 19, 'change_socialtoken' UNION ALL SELECT 'Can delete social application token', 19, 'delete_socialtoken'; args=(u'Can add social application', 17, u'add_socialapp', u'Can change social application', 17, u'change_socialapp', u'Can delete social application', 17, u'delete_socialapp', u'Can add social account', 18, u'add_socialaccount', u'Can change social account', 18, u'change_socialaccount', u'Can delete social account', 18, u'delete_socialaccount', u'Can add social application token', 19, u'add_socialtoken', u'Can change social application token', 19, u'change_socialtoken', u'Can delete social application token', 19, u'delete_socialtoken')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'socialaccount'; args=('socialaccount',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tag' AND "django_content_type"."app_label" = 'taggit'); args=('tag', 'taggit')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tag' AND "django_content_type"."app_label" = 'taggit'); args=('tag', 'taggit')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('taggit', 'tag'); args=['taggit', 'tag']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'taggeditem' AND "django_content_type"."app_label" = 'taggit'); args=('taggeditem', 'taggit')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'taggeditem' AND "django_content_type"."app_label" = 'taggit'); args=('taggeditem', 'taggit')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('taggit', 'taggeditem'); args=['taggit', 'taggeditem']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (20, 21) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(20, 21)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add Tag', 20, 'add_tag' UNION ALL SELECT 'Can change Tag', 20, 'change_tag' UNION ALL SELECT 'Can delete Tag', 20, 'delete_tag' UNION ALL SELECT 'Can add Tagged Item', 21, 'add_taggeditem' UNION ALL SELECT 'Can change Tagged Item', 21, 'change_taggeditem' UNION ALL SELECT 'Can delete Tagged Item', 21, 'delete_taggeditem'; args=(u'Can add Tag', 20, u'add_tag', u'Can change Tag', 20, u'change_tag', u'Can delete Tag', 20, u'delete_tag', u'Can add Tagged Item', 21, u'add_taggeditem', u'Can change Tagged Item', 21, u'change_taggeditem', u'Can delete Tagged Item', 21, u'delete_taggeditem')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'taggit'; args=('taggit',)
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'revision' AND "django_content_type"."app_label" = 'reversion'); args=('revision', u'reversion')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'revision' AND "django_content_type"."app_label" = 'reversion'); args=('revision', u'reversion')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('reversion', 'revision'); args=[u'reversion', 'revision']
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'version' AND "django_content_type"."app_label" = 'reversion'); args=('version', u'reversion')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'version' AND "django_content_type"."app_label" = 'reversion'); args=('version', u'reversion')
(0.000) BEGIN; args=None
(0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('reversion', 'version'); args=[u'reversion', 'version']
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (22, 23) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(22, 23)
(0.000) BEGIN; args=None
(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT 'Can add revision', 22, 'add_revision' UNION ALL SELECT 'Can change revision', 22, 'change_revision' UNION ALL SELECT 'Can delete revision', 22, 'delete_revision' UNION ALL SELECT 'Can add version', 23, 'add_version' UNION ALL SELECT 'Can change version', 23, 'change_version' UNION ALL SELECT 'Can delete version', 23, 'delete_version'; args=(u'Can add revision', 22, u'add_revision', u'Can change revision', 22, u'change_revision', u'Can delete revision', 22, u'delete_revision', u'Can add version', 23, u'add_version', u'Can change version', 23, u'change_version', u'Can delete version', 23, u'delete_version')
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'reversion'; args=('reversion',)
